plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.6'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'com.palantir.docker' version '0.35.0'
}

//TODO - esse valor deve ser o mesmo do seu Docker Hub ID
group = 'wbatista985'
//TODO - aqui é o lugar onde se configura a tag da imagem Docker a ser gerada
version = '1.0.0'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'org.springframework:spring-jms:5.3.26'
	implementation 'com.amazonaws:aws-java-sdk-sqs:1.12.744'
	implementation 'com.amazonaws:amazon-sqs-java-messaging-lib:1.0.8'

	implementation group: 'com.amazonaws', name: 'aws-java-sdk-dynamodb', version: '1.12.750'
	implementation group: 'io.github.boostchicken', name: 'spring-data-dynamodb', version: '5.2.5'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.register('unpack', Copy) {
	dependsOn bootJar
	from(zipTree(tasks.bootJar.outputs.files.singleFile))
	into("build/dependency")
}

//Já está preparado para gerar imagem no formato linux/amd64, inclusive em computadores com processadores ARM, como os novos Macbook.
//A variável project.name deve ser configurada no arquivo settings.gradle
docker {
	name "${project.group}/${project.name}"
	buildx true
	platform 'linux/amd64'
	copySpec.from(tasks.unpack.outputs).into('dependency')
	buildArgs(['DEPENDENCY' : "dependency"])
}

tasks.named('test') {
	useJUnitPlatform()
}





